
s=[0,7,2,0,0,4,9,0,0;
   3,0,4,0,8,9,1,0,0;
   8,1,9,0,0,6,2,5,4;
   7,0,1,0,0,0,0,9,5;
   9,0,0,0,0,2,0,7,0;
   0,0,0,8,0,7,0,1,2;
   4,0,5,0,0,1,6,2,0;
   2,3,7,0,0,0,5,0,1
   0,0,0,0,2,5,7,0,0];

0,1,0,0,0,0,7,0,0;7,0,3,0,0,0,0,0,9;9,0,0,3,7,4,6,0,0;0,0,0,4,9,0,0,8,2;
    0,9,6,2,0,8,0,0,0;2,0,0,0,0,0,0,1,0;0,0,0,0,0,1,0,0,0;8,3,0,0,4,9,5,0,7;
    0,4,9,0,0,0,0,0,3

[ 0,8,0,0,0,0,0,9,0;
    0,1,0,0,8,6,3,0,2;
    0,0,0,3,1,0,0,0,0;
    0,0,4,0,0,0,0,0,0;
    0,0,0,0,0,0,0,0,5;
    0,0,0,2,6,1,0,0,4;
    0,0,0,5,4,0,0,0,6;
    3,0,9,0,0,0,8,0,0;
    2,0,0,0,0,0,0,0,0];
[0,0,7,0,0,8,0,6,0;
   0,0,0,0,0,0,0,0,8;
   0,3,0,6,5,9,0,0,0;
   0,9,0,4,0,0,6,0,0;
   8,0,0,0,6,0,0,0,7;
   0,0,6,0,0,1,0,4,0;
   0,0,0,9,7,6,0,3,0;
   4,0,0,0,0,0,0,0,0;
   0,5,0,3,0,0,8,0,0;
    ];



r=7;c=2;
[R Rindex]=identifyMissingNumbers_R(x,r);
[C Cindex]=identifyMissingNumbers_C(x,c);
v=CompareAndEliminate(R,C);
I=identifyMissingIndices(x);
a=checkBox(x,v,r,c,I);
printArray(R);
printArray(C);
printArray(v);
printArray(a);
a=[1 2;
   3 4];
b=[1 3;
   3 4;
   1 6];
v=CompareAndEliminate2D(b,a);
print2DArray(v);



Note:Any x passed as a parameter is the board or grid
-[R Rindex]=IdentifyMissingNumbers_R: gets the missing numbers in each row and their indices

-[C Cindex]IdentifyMissingNumbers_C: gets the missing numbers in each column and their indices

-CompareAndEliminate(a,b):For each index in the grid, it gets the values that could be occupied by that index by eliminating repetitive values between
a and b where a is an array of the missing numbers in the row and b is an array of the missing numbers in the column

-IdentifyMissingIndices: This function goes through a loop through the whole grid to identify all the missing indices in the grid by implementing 
IdentifyMissingNumbers_R(.._C also works as they're both the same but it will be sorted differently) and putting all those values into a 2D Array of n*2
where n(number of rows) is also the number of missing indices and 2(no. of columns) is constant.


-CheckBox(x,v,i,j,q):x is the grid, v is the array of the possible values of that indices, i is the row No. and j is the
column number of the index for which we want to check the box, and q is the array of missing indices. It works as follows: It basically checks for each 
index(i,j) if it exists in q(through a function called isFound)If so then it continues, If any number in the box is found to also exist in 
v(the possible values to occupy that index) then that number is removed from v and a new array is created to store the new numbers excluding the number(s)
we found to exist in the box. The problem occurs in that function because as you try to loop through the whole grid to get the missing values of of each
there's no way to store those new arrays of different sizes in the same place. 

test() and hint are almost the same and I used them to test the code

Those are the main functions. Other functions are complementary and not very important to get the game working.



for i=1:uLength
    for k=1:uLength
        KK=ifZeros(W,k);
    if u(i,1)==u(k,1) && KK~=1
        [RR RRArray]=identifyIdenticalRows(W,i,k);
    end
    if RR==1
        for l=1:uLength
            for p=1:uLength
            if l~=i && p ~= k && u(l,1)==u(p,1)
                for n=1:uLength
                    for m=1:9
                        for e=1:length(RRArray)
                            if W(n,m)==RRArray(e)
                                W(n,m)=0;
                            end
                        end
                    end
                end
            end
            end
        end
    end
    end
end  


CheckBox
for i=1:9
    for j=1:9
        if length(a)==1 && x(i,j)~=0
            a=[];
        end
    end
end


[5,3,0,0,7,0,0,0,0;
   6,0,0,1,9,5,0,0,0;
   0,9,8,0,0,0,0,6,0;
   8,0,0,0,6,0,0,0,3;
   4,0,0,8,0,3,0,0,1;
   7,0,0,0,2,0,0,0,6;
   0,6,0,0,0,0,2,8,0;
   0,0,0,4,1,9,0,3,5;
   0,0,0,0,8,0,0,7,9;]

solvePuzzle
for i=1:9
    for j=1:9
        r=9;c=2;
        [R Rindex]=identifyMissingNumbers_R(x,r);
        [C Cindex]=identifyMissingNumbers_C(x,c);
        v=CompareAndEliminate(R,C);
        I=identifyMissingIndices(x);
        a=checkBox(x,v,i,j,I);
        if length(a)==1 && x(i,j)==0
            s(k)=a;
            k=k+1;
            y(b,1)=i;y(b,2)=j;
            b=b+1;
        end
    end
end
end
for f=1:k-1
    x(y(f,1),y(f,2))=s(f);
end
print2DArray(x);
end
Draft
r=1;c=5;
[R Rindex]=identifyMissingNumbers_R(x,r);
[C Cindex]=identifyMissingNumbers_C(x,c);
v=CompareAndEliminate(R,C);
[I ILength Icount]=identifyMissingIndices(x);
a=checkBox(x,v,r,c,I);
if length(a)==1 && x(r,c)~=0
    a=[];
elseif length(a)==1 && x(r,c)==0
    x(r,c)=a;
end

hint(x)
[r,c]=size(x);
b=1;k=1;
for i=1:9
    for j=1:9
        [a1 a1I]=identifyMissingNumbers_R(x,i);
        [a2 a2I]=identifyMissingNumbers_C(x,j);
        a3=CompareAndEliminate(a1,a2);
        a4=compareAndEliminate2D(a1I,a2I);
        a5=checkBox(x,a3,i,j);
        if length(a5)==1 && x(i,j)==0
            s(k)=a5;
            k=k+1;
            y(b,1)=i;y(b,2)=j;
            b=b+1;
        end
    end
end
for f=1:k-1
    x(y(f,1),y(f,2))=s(f);
end
end
if rowNo<=3
    rowNo=1;
elseif rowNo<=6
    rowNo=4;
else 
    rowNo=7;
end
if colNo<=3
    colNo=1;
elseif colNo<=6
    colNo=4;
else 
    colNo=7;
end